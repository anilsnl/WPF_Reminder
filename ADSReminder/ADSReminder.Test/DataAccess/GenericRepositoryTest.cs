using ADSReminder.DataAccess.Abstraction;
using ADSReminder.DataAccess.Concrete.Mock;
using ADSReminder.Models.DBObjects;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace ADSReminder.Test.DataAccess
{
    [TestClass]
    public class GenericRepositoryTest
    {
        IGenericRepository mGenericRepository;
        public GenericRepositoryTest()
        {
            mGenericRepository = new MosckGenericRepositıry(new List<object>
            {
                new Reminder{Id=1,CreatedBy=1,CreatedDate=DateTime.Now,OwnerId=1,Title="Title Test A",Detail="Detail A"},
                new Reminder{Id=2,CreatedBy=1,CreatedDate=DateTime.Now,OwnerId=1,Title="Title Test B",Detail="Detail A"}
            });
        }
        [TestMethod]
        public async Task FnInsertAsyncShouldAddNewItemWithAutogeneratedIdGreaderThemZero()
        {
            var lcObject = await mGenericRepository.fnInsertAsync<Reminder>(new Reminder
            {
                Title = "Insert Test",
                Detail = "Insert Detail",
                CreatedBy = 1,
                CreatedDate = DateTime.Now
            });
            Assert.IsTrue(lcObject.Id > 0);
        }
        [TestMethod]
        public async Task fnGetFirstAsyncReturnsNullWhenNotMatchesWithPassingFilter()
        {
            var lcResult = await mGenericRepository.fnGetFirstAsync<Reminder>(a => a.Title == "Test Title");
            Assert.IsNull(lcResult);
        }
    }
}
